import { SignInButton, useUser } from "@clerk/nextjs";
import { Box, ImageListItem, TextField, Typography } from "@mui/material";
import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) return null;
  return (
    <Box
      sx={{
        display: "flex",
        width: "100%",
      }}
    >
      <ImageListItem sx={{ marginRight: 2, height: 56, width: 56 }}>
        <Image
          src={user?.profileImageUrl}
          alt="profileImage"
          style={{ borderRadius: "50%" }}
          width={56}
          height={56}
        />
      </ImageListItem>
      <TextField
        sx={{
          input: { color: "white" },
          label: { color: "white" },
          flexGrow: 1,
        }}
        label="Type something!"
        variant="standard"
        color="primary"
      />
    </Box>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <Box
      key={post.id}
      sx={{
        p: 4,
        border: 1,
        borderColor: "rgb(148 163 184)",
        display: "flex",
      }}
    >
      <ImageListItem sx={{ marginRight: 2, height: 56, width: 56 }}>
        <Image
          src={author.profileImageUrl}
          alt={`@${author.username}'s profile picture`}
          style={{ borderRadius: "50%" }}
          width={56}
          height={56}
        />
      </ImageListItem>
      <Box sx={{ display: "flex", flexDirection: "column" }}>
        <Box sx={{ color: "#cbd5e1", display: "flex", alignItems: "center" }}>
          <Typography
            variant="body1"
            sx={{ marginRight: 1 }}
          >{`@${author.username}`}</Typography>
          <Typography variant="body2">{`Â· ${dayjs(
            post.createdAt
          ).fromNow()}`}</Typography>
        </Box>
        <Box component="span">{post.content}</Box>
      </Box>
    </Box>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box
          sx={{
            display: "flex",
            justifyContent: "center",
            height: "100vh",
          }}
        >
          <Box
            sx={{
              maxWidth: { md: 600 },
              width: "100vw",
              border: 1,
              borderColor: "rgb(148 163 184)",
            }}
          >
            <Box
              sx={{
                border: 1,
                borderColor: "rgb(148 163 184)",
                p: 2,
              }}
            >
              {!user.isSignedIn && (
                <Box className="flex justify-center">
                  <SignInButton />
                </Box>
              )}
              {user.isSignedIn && <CreatePostWizard />}
            </Box>
            <Box
              sx={{
                display: "flex",
                flexDirection: "column",
              }}
            >
              {[...data, ...data]?.map((fullPost) => (
                <PostView {...fullPost} key={fullPost.post.id} />
              ))}
            </Box>
          </Box>
        </Box>
      </main>
    </>
  );
};

export default Home;
